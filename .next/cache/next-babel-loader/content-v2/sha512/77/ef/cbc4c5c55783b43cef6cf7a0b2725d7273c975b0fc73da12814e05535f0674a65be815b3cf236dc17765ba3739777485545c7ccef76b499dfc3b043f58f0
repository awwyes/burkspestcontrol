{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { extendTheme } from '@chakra-ui/react';\n\nconst config = _objectSpread(_objectSpread({}, extendTheme), {}, {\n  colors: _objectSpread(_objectSpread({}, extendTheme), {}, {\n    initialColorMode: \"light\",\n    useSystemColorMode: false\n  })\n});\n\nconst theme = extendTheme({\n  config\n});\nexport default customTheme;","map":{"version":3,"sources":["/Users/tonyburks/_code/burkspestcontrol/theme.tsx"],"names":["extendTheme","config","colors","initialColorMode","useSystemColorMode","theme","customTheme"],"mappings":";;;;;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,MAAM,mCACLD,WADK;AAERE,EAAAA,MAAM,kCACCF,WADD;AAENG,IAAAA,gBAAgB,EAAE,OAFZ;AAGNC,IAAAA,kBAAkB,EAAE;AAHd;AAFE,EAAZ;;AASA,MAAMC,KAAK,GAAGL,WAAW,CAAC;AAAEC,EAAAA;AAAF,CAAD,CAAzB;AAEA,eAAeK,WAAf","sourcesContent":["import { extendTheme } from '@chakra-ui/react';\n\nconst config = {\n    ...extendTheme,\n    colors: {\n        ...extendTheme,\n    initialColorMode: \"light\",\n    useSystemColorMode: false,\n    },\n};\n\nconst theme = extendTheme({ config })\n\nexport default customTheme;"]},"metadata":{},"sourceType":"module"}