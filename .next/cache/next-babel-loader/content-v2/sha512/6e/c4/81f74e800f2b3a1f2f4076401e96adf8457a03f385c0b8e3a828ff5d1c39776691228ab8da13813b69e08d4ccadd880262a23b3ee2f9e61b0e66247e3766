{"ast":null,"code":"import _defineProperty from \"/Users/tonyburks/_code/burkspestcontrol/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _objectWithoutProperties from \"/Users/tonyburks/_code/burkspestcontrol/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"/Users/tonyburks/_code/burkspestcontrol/components/PricingLayout/Card.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { Box, useColorModeValue } from '@chakra-ui/react';\nimport * as React from 'react';\nimport { CardBadge } from './CardBadge';\nexport var Card = function Card(props) {\n  _s();\n\n  var children = props.children,\n      isPopular = props.isPopular,\n      rest = _objectWithoutProperties(props, [\"children\", \"isPopular\"]);\n\n  return /*#__PURE__*/_jsxDEV(Box, _objectSpread(_objectSpread({\n    bg: useColorModeValue('white', 'gray.700'),\n    position: \"relative\",\n    px: \"6\",\n    pb: \"6\",\n    pt: \"16\",\n    overflow: \"hidden\",\n    shadow: \"lg\",\n    maxW: \"md\",\n    width: \"100%\"\n  }, rest), {}, {\n    children: [isPopular && /*#__PURE__*/_jsxDEV(CardBadge, {\n      children: \"Popular\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 21\n    }, _this), children]\n  }), void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Card, \"3skuTHwppfEdh6aKNlffDjyTB8U=\", false, function () {\n  return [useColorModeValue];\n});\n\n_c = Card;\n\nvar _c;\n\n$RefreshReg$(_c, \"Card\");","map":{"version":3,"sources":["/Users/tonyburks/_code/burkspestcontrol/components/PricingLayout/Card.tsx"],"names":["Box","useColorModeValue","React","CardBadge","Card","props","children","isPopular","rest"],"mappings":";;;;;;;;;;;;AAAA,SAASA,GAAT,EAAwBC,iBAAxB,QAAiD,kBAAjD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAMA,OAAO,IAAMC,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD,EAAsB;AAAA;;AAAA,MAChCC,QADgC,GACCD,KADD,CAChCC,QADgC;AAAA,MACtBC,SADsB,GACCF,KADD,CACtBE,SADsB;AAAA,MACRC,IADQ,4BACCH,KADD;;AAExC,sBACE,QAAC,GAAD;AACE,IAAA,EAAE,EAAEJ,iBAAiB,CAAC,OAAD,EAAU,UAAV,CADvB;AAEE,IAAA,QAAQ,EAAC,UAFX;AAGE,IAAA,EAAE,EAAC,GAHL;AAIE,IAAA,EAAE,EAAC,GAJL;AAKE,IAAA,EAAE,EAAC,IALL;AAME,IAAA,QAAQ,EAAC,QANX;AAOE,IAAA,MAAM,EAAC,IAPT;AAQE,IAAA,IAAI,EAAC,IARP;AASE,IAAA,KAAK,EAAC;AATR,KAUMO,IAVN;AAAA,eAYGD,SAAS,iBAAI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAZhB,EAaGD,QAbH;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AAiBD,CAnBM;;GAAMF,I;UAIHH,iB;;;KAJGG,I","sourcesContent":["import { Box, BoxProps, useColorModeValue } from '@chakra-ui/react'\nimport * as React from 'react'\nimport { CardBadge } from './CardBadge'\n\nexport interface CardProps extends BoxProps {\n  isPopular?: boolean\n}\n\nexport const Card = (props: CardProps) => {\n  const { children, isPopular, ...rest } = props\n  return (\n    <Box\n      bg={useColorModeValue('white', 'gray.700')}\n      position=\"relative\"\n      px=\"6\"\n      pb=\"6\"\n      pt=\"16\"\n      overflow=\"hidden\"\n      shadow=\"lg\"\n      maxW=\"md\"\n      width=\"100%\"\n      {...rest}\n    >\n      {isPopular && <CardBadge>Popular</CardBadge>}\n      {children}\n    </Box>\n  )\n}"]},"metadata":{},"sourceType":"module"}